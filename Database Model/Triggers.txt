DELIMITER //
CREATE TRIGGER users_update BEFORE UPDATE ON users
    FOR EACH ROW
    BEGIN
	         IF NEW.email!=OLD.email then
        IF NEW.email in (
            select email
            From users A  -- CHANGED THE ALIAS TO A
            where a.email = new.email
        ) THEN
        
           SIGNAL SQLSTATE '45000' 
           SET MESSAGE_TEXT = 'Email already registered';

        END IF;
      END IF;  	
    END;
//
DELIMITER ; 

DELIMITER //
CREATE TRIGGER users_insert BEFORE INSERT ON users
    FOR EACH ROW
    BEGIN
	         
        IF NEW.email in (
            select email
            From users A  -- CHANGED THE ALIAS TO A
            where a.email = new.email
        ) THEN
        
           SIGNAL SQLSTATE '45000' 
           SET MESSAGE_TEXT = 'Email already registered';

      END IF;  	
    END;
//
DELIMITER ; 

DELIMITER //
CREATE TRIGGER cutoff_insert BEFORE INSERT ON cutoff
FOR EACH ROW
BEGIN
       IF NOT EXISTS (SELECT * FROM coursesoffered where collegeid=NEW.collegeid AND courseid=NEW.courseid)   THEN
             SIGNAL SQLSTATE '45000' 
             SET MESSAGE_TEXT = 'Course not offered by college';
      END IF;
      IF NEW.open>NEW.close THEN
             SIGNAL SQLSTATE '45000' 
             SET MESSAGE_TEXT = 'Opening Rank must be smaller than Closing rank';
      END IF;
      IF NEW.open<=0 OR NEW.close<=0 THEN 
           SIGNAL SQLSTATE '45000' 
           SET MESSAGE_TEXT = 'Ranks entered must be greater than zero';
      END IF;
	  IF NEW.year<=1970 THEN 
           SIGNAL SQLSTATE '45000' 
           SET MESSAGE_TEXT = 'Enter valid year';
      END IF;
END;
//
DELIMITER ;

DELIMITER //
CREATE TRIGGER user_delete BEFORE DELETE ON users
FOR EACH ROW
BEGIN   
	 
      DELETE FROM blogs where userid=OLD.id;

END;
//
DELIMITER ;

DELIMITER //
CREATE TRIGGER coursesoffered_delete BEFORE DELETE ON coursesoffered
FOR EACH ROW
BEGIN   
	 
      DELETE FROM cutoff where courseid=OLD.courseid  AND collegeid=OLD.collegeid;

END;
//
DELIMITER ;



